# oh, one "template" for each semantic category? or should I tag them with categories instead?
  # the latter sounds like more typing in the long run... but then you don't have to figure out file locations...
    # or should you split into multiple files? but then you have to copy/paste the SVO info
  # BUT if you tag each verbset individually, you also have to retag the O/S constraints. let's not do that for now.

# okay, so without any transformations, V(en) needs to choose between VBP and VBZ, but V(zh) does not.
  # special case: be(I) = am|VBZ1(perhaps)
  # transformations need to set flags that "the system" would execute?
  # ideally, morphology rules would be set in data instead of algorithms, to maximize portability...

  
# sentence templates and verbs (+ arguments) are inseparable; they are both multilingually banked in the same file 
  
  
# TODO: syntax checker that verifies symbol compatibility with the matching syntactic 
  # this is pretty important, if I'm gonna separate this off into a separate file. 
  # heck, it was probably important for a SINGLE file, since it was gonna overflow onto a different page
# n.b. if all top-level keys are preceded by file name, there should be no inter-file collisions
 
# proposal (hypothesis): all verbs in each semantic category can be modified with the same PP set.

action:
  template: transitive
  tags:
    S: [animate]
  verbsets:
  - en: [use, utilize]
    zh: [使用, 用, 利用] # 使用 is more common than 用 in IWSLT...but not by much

action.attempt.modal: # wordnet has this under verb.social...
  template: modal
  transformations: { C: infinitive.vp }
  tags:
    #S: animate # try for some metaphorical usages?
  verbsets:
  - en: try # could add "attempt", but it's BARELY in the corpus
    zh: 尝试    

# the biggest category by FAR. TED talkers really like talking about creation
action.creation: &action_creation
  template: transitive
  #tags:
  #  S: [entity]
  verbsets:
  - en: build
    zh: 建立
  - en: [create, make]
    zh: [做, 创造, 制造]
  - en: design
    zh: 设计
  - en: develop
    zh: 发展
  - en: [generate, produce]
    zh: 产生

  
## I made him a table
## *I created him a table
## TODO: "make" also has that "transform" usage... let's skip this for now
#action.creation.indirect.object:
#  <<: *action_creation
#  verbsets:
#  - en: make
#    zh: 做
  
change.change:
  template: transitive
  # wait, doesn't this belong in its own category?
  verbsets:
  - en: change
    zh: 改变


  ## TODO: custom templates for multi-purpose verbs like "do" - ugh, does that require tweaking this data structure?change.start:

  #- en: start # need to tag O as "event"  or "inanimate"? otherwise you get stuff like "start Bob"
  #  zh: 开始

# TODO： verbset-specific postwords... can't just add directly to verbset - how could you tell the difference between pre and post?
change.appear.showup: 
  template: intransitive
  additions:
    langs:
      en:
        postwords: { V: up }
  verbsets:
  - en: show
    zh: 出现
  
change.start.modal:
  template: modal
  transformations: { C: infinitive.vp }
  
  verbsets:
  - en: [start, begin]
    zh: 开始
    
# category title admittedly taken from WordNet (sounds better than "thinking")
cognition.decision.modal:
  template: modal
  transformations: { C: infinitive.vp }
  tags:
    S: [animal]
  verbsets:
  - en: decide
    zh: 决定

cognition.knowledge:
  template: transitive
  tags: 
    S: [animal] # hmm, should this really be "person"? or "entity"?
  verbsets:
  - en: understand
    zh: [了解, 理解]
  

cognition.knowledge.meta: #&knowledge
  template: meta
  
  tags:
    C:
    S: [animal]
    
  additions:
    langs:
      en:
        prewords: { C: [that, ''] }
      zh:
        prewords: { C: [的 是, ''] }  # or should this be a POSTWORD of V?
    
  verbsets:
  # TODO： imagine eating an apple - is "imagine" modalish, or is "eating" a gerund?
  - en: imagine
    zh: 想象
  
  - en: know
    zh: 知道
    
  - en: think
    zh: 想
    
cognition.learn.meta:
  template: meta
  tags: { S: [animal] }
  additions:
    langs:
      en:
        prewords: { C: that }
      zh:
        prewords: { C: [的 是, 的 是, 的 是, ''] }
  verbsets:
  - en: learn # or does this belong in its own sub-category? (requires "that", unlike imagine, know, think)
    zh: 学习
    
cognition.learn.modal:
  template: modal
  tags: { S: animal }
  transformations: { C: [[infinitive.vp], [infinitive.how.vp]] }
  verbsets:
  - en: learn
    zh: 学习 # 学习 VP - hmm, that seems kind of awkward... but 学习 了解 does occur in the corpus...
    
cognition.opinion.meta:
  template: meta
  tags:
    S: [person]
  additions:
    langs:
      en:
        prewords: { C: that }
      #  punctuation:
      #zh:
      #  punctuation:
  verbsets:
  - en: believe
    zh: [相信, 认为]
  #- en: decide # TODO: this should have a subjunctive argument? or "should"?
  #  zh: 决定
  - en: feel
    zh: 觉得
    
    # note that these are already kind of transformation-like, since they are not part of the original template
    
  
# TODO: NOT SCALABLE WITH # LANGUAGES! would need to combine multiple entries into one for scalability
  # still, this is not QUITE as problematic, since the set of "polymorphic" meta verbs is relatively small...right?
# add overrides to verbsets to blacklist/whitelist additional options
  # transformations take place at the template level, but verbsets enter at the lexical level
  # right now, lexical level only varies after the template has been FIXED
  # workaround: new verb category, but use YAML references to keep data DRY, overriding/adding keys as needed

#cognition.knowledge.infinitive:
#  <<: *knowledge
#  
#  # TODO: move this into additions?
#  transformations: { C: infinitive }
#  
#  # this is just for testing - "I know Alice to have the world" is semi-awkward
#  verbsets:
#  - en: know
#    zh: 知道

cognition.solve:
  template: transitive
  #tags: # TODO: "sensible" mode - currently committed to "nonsense mode" under deadline (colorless green ideas)
  #  O: [problem] # currently chokes on lack of problem-tagged names
  verbsets:
  - en: solve
    zh: 解决


# communication.inform.ditransitive - meh, seems kind of uncommon - not worth the trouble for now...
  # example: I|S told|V him|R about the cat|O
  # en: prewords: O: about - ugh... seems preferable to put a high-probability "oblique PP" in the random generator
  # tell, remind, inform
    # *提醒 does NOT have this usage...
    # R is more obligatory?
  
  # talk/speak: R = "to him", O = "about NP" 
    # even though it's intransitive, there are 2 common prepositions that attach, neither of which is obligatory
    # also, the general en order is "spoke to R about O", NOT "*spoke about O to R"... can't enforce that here...
      # so... one workaround is to add them in a particular order in the randomizer
    # an additional complication is that with zero PP's, zh would need a dummy argument 讲话 or 说话
      # COULD sidestep using 跟 R 说话 关于 O, but that looks awfully formal...
  # 谈 生意 - this is a collocation; 谈 NP generally does not work
  
  # 讲/说: R = 跟他 (although this maps more onto "said" than "talk")
    # could hack it and do "讲/说 O 的 事情"

communication.command.modal: # this is actually a very different usage of "tell", and it maps cleanly onto modal 叫
  template: modal.audience
  tags:
    S: person # although you might get some funny stuff like "the toaster told me to kick Alice"
    O: animate
  transformations: { C: infinitive.vp }
  additions:
    langs:
      zh: 
        prewords: { C: ['', '去'] } 
  verbsets: # TODO: 叫了 sounds awkward yet "told" is most common...
  - en: tell
    zh: 叫

    
communication.inform.meta.audience:
  template: meta.audience
  tags:
    S: person
    O: animate
  additions:
    symbols: # would be better here, but would need to set the template as writable...
      O: 
        options: { forbidden templates: [noun] } # for now, don't allow a hugely nested "indirect object"...
  verbsets:
  - en: tell
    zh: 告诉
  

    
communication.verbal.meta:
  template: meta
  tags:
    S: [person]    
    
  additions:
    langs:
      en:
        prewords: { C: ['', that] }        
      #zh: # TODO: useful for deep stacks... roughly equivalent to "that", but not that common? incompatible with past tense
        #prewords: { C: ['', '', '', 的 是] } 
      zh:
        prewords: { C: ['', '，'] }
  
  verbsets:
  - en: say
    zh: 说
    
# pending nouns with tag #written 
#communication.written:
#  template: transitive
#  tags:
#    S: [person]
#    O: [written]
#  additions:
#    symbols:
#      O:
#        options: { forbidden templates: [pronoun] }
#  verbsets:
#  - en: write
#    zh: 写

# TODO: "it is written on NP that" / "NP 上 写的"... (that's PP territory...)
communication.written.meta:
  template: meta
  tags:
    S: [person]
  additions:
    langs:
      en:
        prewords: { C: that }
      zh:
        prewords: { C: '，' } #的 是 - incompatible with past tense, like 说
  verbsets:
  - en: write
    zh: 写
   
emotion.desire: &emotion_desire
  # TODO: PP-style modifications, before all verbs in the set - probably with an example
  
  # see clause_templates.yml
  template: transitive 
  
  # semantic constraints on (the head word of) S, O. TODO: allow override on per-verb basis?
  tags:
    O:
    S: [animal] 
      # TODO: allow distinction between tags that are required (must match all) and allowed (must match [at least?] one)
      
  verbsets:
  - example: Alice wants cookies .
    en: want
    zh: [要, 想要]
        
    
emotion.desire.meta:
  <<: *emotion_desire
  template: meta
  transformations: { C: infinitive.clause }
  additions:
    langs:
      zh: 
        prewords: { C: ['', 的 是] } 
  verbsets:
  - en: want
    zh: 要 # 想要 seems kind of awkward here, though
    
emotion.desire.modal:
  <<: *emotion_desire
  template: modal
  transformations: { C: infinitive.vp }
  verbsets:
  - en: want
    zh: [要, 想要]
    
emotion.opinion: &emotion_opinion
  template: transitive
  tags: { S: [person] }
  verbsets:
  - en: like
    zh: 喜欢
    
emotion.opinion.modal: 
  <<: *emotion_opinion
  template: modal
  transformations: { C: infinitive.vp }
  
motion.bring:
  template: transitive
  additions:
    symbols:
      O:
        options: { forbidden templates: [pronoun, name] } # zh: 带 N 来
  verbsets:
  - en: bring
    zh: 带来

motion.enter.into:
  template: transitive
  # TODO: location? leave it be for now - it's metaphorical like that
  additions:
    langs:
      en:
        postwords: { V: into }
  verbsets:
  - en: go
    zh: 进入 # 到 is WAY more common...
    
motion.return.to:
  template: transitive
  tags:
    O: [location]
  additions:
    symbols:
      O:
        options: { forbidden templates: [pronoun] }
    langs:
      en:
        postwords: { V: back to }
  verbsets:
  - en: go
    zh: 回到
        
    

perception.hearing: &perception_hearing
  template: transitive
  tags: { S: animal }
  verbsets:
  - en: hear
    zh: 听到
    
perception.hearing.meta:
  <<: *perception_hearing
  template: meta
  # TODO: hear him VP - not used because the "that" preword makes nesting more readable
  additions:
    langs:
      en:
        prewords: { C: [that] } # *to hear Bob provides projects
      zh:
        prewords: { C: [的 是, ''] }
        
  verbsets:
  - en: hear
    zh: 听说 # 听到 doesn't feel right for "I hear that C"
    
perception.vision: &perception_vision
  template: transitive
  
  tags:
    S: [animal]
    
  verbsets:
  - en: see
    zh: 看到 # TODO: 看? 看到 looks weird in modals: Chuck likes to see Alice / Chuck 喜欢 看到 Alice
    
possession:
  # TODO: PP-style modifications, before all verbs in the set - probably with an example
  
  # see clause_templates.yml
  template: transitive 
  
  # semantic constraints on (the head word of) S, O. TODO: allow override on per-verb basis?
  tags:
    O:
    S: [entity] # what about figurative uses? different semantic category?
    V: # stative? "*我 有 了 O" is not past tense...
    
  verbsets:
  - example: Alice has cookies .
    en: have
    zh: 有
    
  - en: have
    zh: 拥有 # a fairly common zh verb. TODO: combine with 有...
    
  #  # not common - just testing multiple verbsets
  #- en: possess
  #  zh: 独有
    
possession.give: &possession_give
  template: transitive
  tags: { O: [[inanimate], [abstract.object]] } # VerbCategory will assign ONE of these tag lists
  additions:
    symbols:
      O:
        options: { forbidden templates: [pronoun, name] }
  verbsets:
  - en: provide
    zh: 提供
    
possession.give.indirect.object: 
  <<: *possession_give
  verbsets:
  - en: give
    zh: 给
    
possession.obtain:
  template: transitive
  tags: 
    S: [entity]
  verbsets:
  - en: [get, obtain] # obtain is really not that common, but "got" just looks funny sometimes...
    zh: [得到, 获得, 接受]
#  - en: find # TODO: doesn't really work in present tense
#    zh: 找到



social.help: &social_help
  template: transitive
  verbsets:
  - en: help
    zh: 帮助 # TODO: 帮 NP 的 忙 - but I suppose that's a different verb
    
social.help.meta: 
  <<: *social_help
  template: meta
  transformations: { C: finite.clause } # TODO: "help" is idiosyncratic? other "assistance" verbs take infinitive vps?
  
#social.help.modal: # disabled for stinkers like "It helps have fine years"
#  <<: *social_help
#  template: modal
#  transformations: { C: finite.vp } # TODO: you can actually "help to VB"... but this seems less common in TED
