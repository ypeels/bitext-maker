# morphological information - which Chinese doesn't need...
# - for ALL verbs in all semantic categories
# n.b. pyyaml cannot write comments back to file (duh - parser discards them)

#VB:     # infinitive
#VBD:    # past
#VBG:    # present participle
#VBN:    # past participle - he had VBN the O
#VBP:    # present - we now VBP the car
#VBZ:    # present 3-sing - he now VBZ the car
__verb__:
  VBD: 
  VBG: 
  VBN: 
  VBP: 
  VBZ: 

# COULD use references, but that would add an annoying extra key to EVERY entry...
# unused? isn't it easier to just check each verb for an "irregular" key? well, doesn't hurt to have this info...
__regular__:
  VBP1: VBP
  VBD1: VBD
  VBD3: VBD

# making things a big long list instead of multiple documents for now
# - don't see a compelling reason to use multiple documents per file right now, other than maybe indentation
# - this way, can use references between words if needed (on its own line, to get the whole list item)

# auxiliaries ------------------------------------------------------  
# TODO: omit regular forms like VBZ = VBP+s?
be: 
  VBD: were
  VBG: being
  VBN: been # should this really be "have been"?
  VBP: are #, "'re"]
  VBZ: is #, "'s"]
  irregular:
    VBP1: am #, "'m"] # should i add more metadata here?
    VBD1: was
    VBD3: was
    # TODO: subjunctives

do:
  VBD: did
  VBG: doing
  VBN: done
  VBP: do
  VBZ: does
  
go:
  VBD: went
  VBG: going
  VBN: gone
  VBP: go
  VBZ: goes
    
# VB != [have, 've] - VB is the unique infinitive form (you don't say "to 've")
have:
  VBD: had # TODO: 'd when auxiliary - maybe throw that into "irregular"?
  VBG: having
  VBN: had
  VBP: have # TODO: 've when auxiliary
  VBZ: has # "he's a lovely face" - I don't think that's very standard en-us... save for a transformation?
# ------------------------------------------------------------------  
  
begin:
  VBD: began 
  VBG: beginning
  VBN: begun
  VBP: begin
  VBZ: begins
believe:
  VBD: believed
  VBG: believing
  VBN: believed
  VBP: believe
  VBZ: believes
bring:
  VBD: brought
  VBG: bringing
  VBN: brought
  VBP: bring
  VBZ: brings
build:
  VBD: built
  VBG: building
  VBN: built
  VBP: build
  VBZ: builds
change:
  VBD: changed
  VBG: changing
  VBN: changed
  VBP: change
  VBZ: changes
  
create:
  VBD: created
  VBG: creating
  VBN: created
  VBP: create
  VBZ: creates
decide:
  VBD: decided
  VBG: deciding
  VBN: decided
  VBP: decide
  VBZ: decides  
design:
  VBD: designed
  VBG: designing
  VBN: designed
  VBP: design
  VBZ: designs
feel:
  VBD: felt
  VBG: feeling
  VBN: felt
  VBP: feel
  VBZ: feels
  
find:
  VBD: found
  VBG: finding
  VBN: found
  VBP: find
  VBZ: finds
generate:
  VBD: generated
  VBG: generating
  VBN: generated
  VBP: generate
  VBZ: generates
get:
  VBD: got
  VBG: getting
  VBN: gotten
  VBP: get
  VBZ: gets
help:
  VBD: helped
  VBG: helping
  VBN: helped
  VBP: help
  VBZ: helps
imagine:
  VBD: imagined 
  VBG: imagining
  VBN: imagined
  VBP: imagine
  VBZ: imagines
know:
  VBD: knew
  VBG: knowing
  VBN: known
  VBP: know
  VBZ: knows
learn:
  VBD: learned 
  VBG: learning
  VBN: learned
  VBP: learn
  VBZ: learns
like:
  VBD: liked
  VBG: liking
  VBN: liked
  VBP: like
  VBZ: likes
  
make:
  VBD: made
  VBG: making
  VBN: made
  VBP: make
  VBZ: makes
obtain:
  VBD: obtained
  VBG: obtaining
  VBN: obtained
  VBP: obtain
  VBZ: obtains
produce:
  VBD: produced
  VBG: producing
  VBN: produced
  VBP: produce
  VBZ: produces
provide: 
  VBD: provided
  VBG: providing
  VBN: provided
  VBP: provide
  VBZ: provides
  
possess:
  VBD: possessed
  VBG: possessing
  VBN: possessed
  VBP: possess
  VBZ: possesses
  
say:
  VBD: said
  VBG: saying
  VBN: said
  VBP: say
  VBZ: says
  
see:
  VBD: saw
  VBG: seeing
  VBN: seen
  VBP: see
  VBZ: sees
  
show:
  VBD: showed
  VBG: showing
  VBN: shown
  VBP: show
  VBZ: shows
  
solve:
  VBD: solved 
  VBG: solving
  VBN: solved
  VBP: solve
  VBZ: solves
  
start:
  VBD: started
  VBG: starting
  VBN: started
  VBP: start
  VBZ: starts
  
think:
  VBD: thought
  VBG: thinking
  VBN: thought
  VBP: think
  VBZ: thinks
try:
  VBD: tried
  VBG: trying
  VBN: tried
  VBP: try
  VBZ: tries
understand:
  VBD: understood
  VBG: understanding
  VBN: understood
  VBP: understand
  VBZ: understands
  
use:
  VBD: used
  VBG: using
  VBN: used
  VBP: use
  VBZ: uses
utilize:
  VBD: utilized
  VBG: utilizing
  VBN: utilized
  VBP: utilize
  VBZ: utilizes
want:
  VBD: wanted
  VBG: wanting
  VBN: wanted
  VBP: want
  VBZ: wants
write:
  VBD: wrote
  VBG: writing
  VBN: written
  VBP: write
  VBZ: writes