# hmm, this is en-only right now...
infinitive.clause:
  input: Clause
  output: # no change
  additions:
    langs:
      en: # hmm, literal prewords is kind of dangerous? they don't live in the multilingual tree at all...
        forms: { V: VB }        
        prewords: { V: to }
        tags: { S: objective } # hmm, does this clobber other S tags?
      #  punctuation: # remove wrapping meta's punctuation instead for now
      #zh:
      #  punctuation:
        


infinitive.vp:
  input: Clause
  output: 
  
  # will need to tag this at some point for Generator, right? WELL, there's always the list of transformations...
  #output template: VP # VP.infinitive?
  
  conversions: 
    #{ S: target } # hijack participle's target-matching system for semantic checks? doesn't quite work...
    { S: linked }
  
  additions:
    langs:
      en:
        forms: { V: VB }
        prewords: { V: to }
      #  punctuation:
        #tags: { S: objective } no, need to delete S outright
      #zh:
      #  punctuation:
      
  

participle: # TODO: rename to participle.present or participle.active ?
  input: Clause
  output: ADJP
  output template: participle
  
  example: 
    input: The frog eats delicious bugs .
    output: eating delicious bugs
   
  conversions: # TODO: change to description, for easier migration? 
    S: target
  
  # literal changes that get inserted into Template, overwriting any existing entries
  additions:
    langs: 
      en:
        punctuation: # deletes (overwrites) existing punctuation
        forms:
          V: VBG
      zh:
        punctuation:


  
  
#participle.passive # a.k.a. past # target: O
# S becomes optional
# R too...
  # He hit the ball
    # the ball hit by him
    # the ball (that) he hit (this isn't a participle per se, but is a way to adjectivize...)
  

  

remove punctuation:
  input: # explicitly omit input values to allow any input type
  output: # explicitly omit output values to preserve original type
  additions:
    # annoying: have to add each language - but that probably doesn't happen very often
    langs:
      en:
        punctuation:
      zh:
        punctuation:

tense.past:
  input: Clause
  output: # no change
  additions:
    symbols:
      # TODO: language-independent syntax tags in Template, instead of slapping them into EVERY language (which is done here)
      # TODO: specify semantic tags here too
      # note that you can only pass SYNTAX tags this way...
      V: { syntax tags: [tense.past] }
    langs:
      en:
        forms: { V: VBD }
      #zh: 
      
        # TODO: choose between 了 and a default adverbial in data somehow... currently done in generator...
        #postwords: { V: 了 }
  
  

topicalization:
  input: Clause
  input template: transitive # TODO: multiple input template types? but need to encode how O gets moved to beginning...
  output: Clause
  #output template: topicalized # not compatible with set_verb_category... if need be, read off list of transformations
  
  additions:
    symbols:
      P:
        type: pronoun # will this work? or should it be wrapped with an NP? (I suppose could query NP's dependency)
        description: needed for en
        
        # the dependency system is NOT mono-lingual! it's just USED that way for subject-verb
          # it's SUPER flexible, the way it's set up, sufficiently flexible for this usage too.
        # these template additions should get loaded before subnode creation (true of all template transformations, right?)
        dependencies: O 
          # oh, okay,
          
    langs:        
      en:
        template: O , S V P
        tags: { P: objective }
    
      zh: 
        template: O ， S V
  



# 把 (S took O and V PN(O)) - this may be my crowning achievement - but requires changing head verb monolingually...
# passive - requires changing head verb monolingually, and also requires copula
# negation? would vary with zh verb bin... much harder

