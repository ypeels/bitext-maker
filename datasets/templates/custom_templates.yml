test:
  symbols:
    X:
      type: NP
      description: head
      
      # TODO: propagate these down
      options:
        tags: objective
        number: singular
      

  langs:
    en: 
      template: It can be a very complicated thing , X
      punctuation: '.'
    zh: 
      template: X 是 一 个 非常 复杂 的 事物
      punctuation: 。

      
# TODO: add types so you can have custom sub-nodes like "all the gold"

#test2:
#  symbols:
#    N:
#      type: NP
#    V: 
#      type: verb
#  langs:
#    en:
#      template: The N in Spain V mainly on the plains
#      #subject: The N in Spain
#      punctuation: '.' # the alternative is to strip off trailing punctuation in code, which I just might do for a first pass...
#    zh:
#      template: 在 西班牙 的 N 主要 在 平原 上 V
#      #subject: 在 西班牙 的 N
#      punctuation: 。
#      # hmm, participles seem rather difficult to build from custom clause templates...
  
# covers the not uncommon case in TED talks that there are multiple sentences on a line
multiple:
  symbols:
    C1:
      type: Clause
    C2:
      type: Clause
      options:
        capitalization hack: True # TODO: ONLY use a capitalization flag, instead of combining this with generate_all hack in main
      
  langs:
    en: { template: C1 C2 }
    zh: { template: C1 C2 }
      
        
  
  
      
# if a verb can be varied, it should go in clause_templates instead, to leverage subject-verb semantic matching, etc.
# if there is no variable verb, it really belongs here, since that's not really a "Clause" then...?
  # well, you could specify literal verbs in the clause template... 
  # no, that's actually kind of hard... plus, semantic matching is nice
  
  